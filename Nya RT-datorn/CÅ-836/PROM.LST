   1                                NAM     PROM
   2                       *
   3                       * PROGRAM TO READ PROM BASED CMD-FILES
   4                       * TO RAM
   5                       * WRITTEN BY MIKAEL KARLSSON 2024-05-04
   6                       *
   7                       * BASED ON PROM.ASM FROM MPU-LAREN
   8                       * NR 2 1983, WRITTEN BY GUNNAR EJEMOH
   9                       *
  10                       * REQUIRES PROM ON CARD 836
  11                       * EPROM AT ADDRESS $E0B0, $E0C0 AND $E0D0
  12                       * RAM AT ADDRESS $E400-E7FF
  13                       *
  14                       * PROGRAM IN PROM ARE STANDARD FLEX CMD-FILES
  15                       *
  16                       * CALL THE PROGRAM WITH GET PROM IN STARTUP.TXT
  17                       *
  18                       * VERSION 1.0 2024-05-06
  19                       * INITIAL RELEASE
  20                       * VERSION 1.1 2024-05-07
  21                       * VERSION 1.2 2024-05-30
  22                       * VERSION 1.3 2024-06-14
  23                       * ADDED SIGNATURE TO BE USED WITH PROMDIR.CMD
  24                       *
  25  E0B0                 EPROM   EQU     $E0B0     BASE ADDRESS FOR EPROM
  26  E400                 COMTAB  EQU     $E400     COMMAND TABLE
  27  E7FA                 RAM     EQU     $E7FA     SAVE 6 BYTES FOR VARIABLES
  28  0002                 PROMVAL EQU     2         EPROM SELECTOR
  29  CD03                 WARMS   EQU     $CD03     FLEX WARM START
  30  E7F7                 SIGNTR  EQU     $E7F7     MY SIGNATURE
  31                       *
  32                               ORG     RAM       SOME VARIABLES
  33  E7FA                 PRMSTA  RMB     2         CMD-FILE START ADDRESS IN EPROM
  34  E7FC                 RAMSTO  RMB     2         WHERE IN RAM SHOULD IT GO
  35  E7FE                 TRNSFR  RMB     2         TRANSFER ADDRESS
  36                       *
  37                       * PUT THE ADDRESS FOR THE COMMAND TABLE INTO FLEX
  38                       *
  39                               ORG     $CC12     HOOK INTO FLEX
  40  CC12 E4                      FCB     $E4       OUR TABLE IS AT $E400
  41                       *
  42                               ORG     SIGNTR    SIGNATURE AREA
  43  E7F7 504D4B                  FCC     'PMK'     SIGNATURE
  44                       *
  45                               ORG     COMTAB    ALWAYS AT $E400
  46                       *
  47                       * ENTER ALL COMMANDS FOR THE EPROM BASED UTILS
  48                       * AFTER LAST COMMAND, ENTER A 0
  49                       *
  50                       * EACH ENTRY TAKES BETWEEN 4 AND 11 BYTES
  51                       *
  52  E400 41534E                  FCC     'ASN'
  53  E403 00                      FCB     0
  54  E404 E4D5                    FDB     JMPTAB
  55  E406 434154                  FCC     'CAT'
  56  E409 00                      FCB     0
  57  E40A E4E2                    FDB     CAT
  58  E40C 434F5059                FCC     'COPY'
  59  E410 00                      FCB     0
  60  E411 E4EB                    FDB     COPY
  61  E413 44415445                FCC     'DATE'
  62  E417 00                      FCB     0
  63  E418 E4F4                    FDB     DATE
  64  E41A 44454C455445            FCC     'DELETE'
  65  E420 00                      FCB     0
  66  E421 E4FD                    FDB     DELETE
  67  E423 564552494659            FCC     'VERIFY'
  68  E429 00                      FCB     0
  69  E42A E506                    FDB     VERIFY
  70  E42C 56455253494F4E          FCC     'VERSION'
  71  E433 00                      FCB     0
  72  E434 E50F                    FDB     VERSION
  73  E436 4C495354                FCC     'LIST'
  74  E43A 00                      FCB     0
  75  E43B E518                    FDB     LIST
  76  E43D 545459534554            FCC     'TTYSET'
  77  E443 00                      FCB     0
  78  E444 E521                    FDB     TTYSET
  79  E446 4E45574449534B          FCC     'NEWDISK'
  80  E44D 00                      FCB     0
  81  E44E E52A                    FDB     NEWDISK
  82  E450 444952                  FCC     'DIR'
  83  E453 00                      FCB     0
  84  E454 E533                    FDB     DIR
  85  E456 44495252                FCC     'DIRR'
  86  E45A 00                      FCB     0
  87  E45B E53C                    FDB     DIRR
  88  E45D 4449534B494445          FCC     'DISKIDEN'
  89  E465 00                      FCB     0
  90  E466 E545                    FDB     DISKIDEN
  91  E468 415050454E44            FCC     'APPEND'
  92  E46E 00                      FCB     0
  93  E46F E54E                    FDB     APPEND
  94  E471 4255494C44              FCC     'BUILD'
  95  E476 00                      FCB     0
  96  E477 E557                    FDB     BUILD
  97  E479 4F                      FCC     'O'
  98  E47A 00                      FCB     0
  99  E47B E561                    FDB     OCMD
 100  E47D 53415645                FCC     'SAVE'
 101  E481 00                      FCB     0
 102  E482 E56B                    FDB     SAVE
 103  E484 52454E414D45            FCC     'RENAME'
 104  E48A 00                      FCB     0
 105  E48B E575                    FDB     RENAME
 106  E48D 41534D42                FCC     'ASMB'
 107  E491 00                      FCB     0
 108  E492 E57F                    FDB     ASMB
 109  E494 584241534943            FCC     'XBASIC'
 110  E49A 00                      FCB     0
 111  E49B E589                    FDB     XBASIC
 112  E49D 45444954                FCC     'EDIT'
 113  E4A1 00                      FCB     0
 114  E4A2 E593                    FDB     EDIT
 115  E4A4 4445425547              FCC     'DEBUG'
 116  E4A9 00                      FCB     0
 117  E4AA E5CF                    FDB     DEBUG
 118  E4AC 45584543                FCC     'EXEC'
 119  E4B0 00                      FCB     0
 120  E4B1 E59D                    FDB     EXEC
 121  E4B3 434C53                  FCC     'CLS'
 122  E4B6 00                      FCB     0
 123  E4B7 E5A7                    FDB     CLS
 124  E4B9 554E44454C4554          FCC     'UNDELETE'
 125  E4C1 00                      FCB     0
 126  E4C2 E5B1                    FDB     UNDELETE
 127  E4C4 4D4150                  FCC     'MAP'
 128  E4C7 00                      FCB     0
 129  E4C8 E5BB                    FDB     MAP
 130  E4CA 4D454D44554D50          FCC     'MEMDUMP'
 131  E4D1 00                      FCB     0
 132  E4D2 E5C5                    FDB     MEMDUMP
 133  E4D4 00                      FCB     0
 134                       *
 135  E4D5                 JMPTAB  EQU     *         START ADDRESSES
 136                       *
 137                       * HERE ARE ALL START ADDRESSES FOR THE PROGRAMS
 138                       * THAT ARE IN THE EPROM
 139                       * X SHOULD CONTAIN THE START ADDRESS FOR THE PROGRAM
 140                       * IN EPROM
 141                       *
 142                       * EACH ENTRY TAKES 10 BYTES
 143                       *
 144                       * FLEX 9.1 IS LOCATED BETWEEN $0000 - $18D7
 145                       *
 146  E4D5 3476                    PSHS    X,Y,A,B,U SAVE REGISTERS
 147  E4D7 8E18D8                  LDX     #$18D8    START ADRDESS
 148  E4DA DE01                    LDU     1         WHAT EPROM?
 149  E4DC BFE7FA          STORE   STX     PRMSTA    PUT IN PRMSTA
 150  E4DF 7EE5D9                  JMP     LADDA     JUMP
 151                       *
 152  E4E2 3476            CAT     PSHS    X,Y,A,B,U
 153  E4E4 8E19CE                  LDX     #$19CE
 154  E4E7 DE01                    LDU     1
 155  E4E9 20F1                    BRA     STORE
 156                       *
 157  E4EB 3476            COPY    PSHS    X,Y,A,B,U
 158  E4ED 8E1C80                  LDX     #$1C80
 159  E4F0 DE01                    LDU     1
 160  E4F2 20E8                    BRA     STORE
 161                       *
 162  E4F4 3476            DATE    PSHS    X,Y,A,B,U
 163  E4F6 8E20B3                  LDX     #$20B3
 164  E4F9 DE01                    LDU     1
 165  E4FB 20DF                    BRA     STORE
 166                       *
 167  E4FD 3476            DELETE  PSHS    X,Y,A,B,U
 168  E4FF 8E21C7                  LDX     #$21C7
 169  E502 DE01                    LDU     1
 170  E504 20D6                    BRA     STORE
 171                       *
 172  E506 3476            VERIFY  PSHS    X,Y,A,B,U
 173  E508 8E2324                  LDX     #$2324
 174  E50B DE01                    LDU     1
 175  E50D 20CD                    BRA     STORE
 176                       *
 177  E50F 3476            VERSION PSHS    X,Y,A,B,U
 178  E511 8E23BC                  LDX     #$23BC
 179  E514 DE01                    LDU     1
 180  E516 20C4                    BRA     STORE
 181                       *
 182  E518 3476            LIST    PSHS    X,Y,A,B,U
 183  E51A 8E243A                  LDX     #$243A
 184  E51D DE01                    LDU     1
 185  E51F 20BB                    BRA     STORE
 186                       *
 187  E521 3476            TTYSET  PSHS    X,Y,A,B,U
 188  E523 8E267B                  LDX     #$267B
 189  E526 DE01                    LDU     1
 190  E528 20B2                    BRA     STORE
 191                       *
 192  E52A 3476            NEWDISK PSHS    X,Y,A,B,U
 193  E52C 8E2832                  LDX     #$2832
 194  E52F DE01                    LDU     1
 195  E531 20A9                    BRA     STORE
 196                       *
 197  E533 3476            DIR     PSHS    X,Y,A,B,U
 198  E535 8E30AB                  LDX     #$30AB
 199  E538 DE01                    LDU     1
 200  E53A 20A0                    BRA     STORE
 201                       *
 202  E53C 3476            DIRR    PSHS    X,Y,A,B,U
 203  E53E 8E34F6                  LDX     #$34F6
 204  E541 DE01                    LDU     1
 205  E543 2097                    BRA     STORE
 206                       *
 207  E545 3476            DISKIDEN PSHS    X,Y,A,B,U
 208  E547 8E3939                  LDX     #$3939
 209  E54A DE01                    LDU     1
 210  E54C 208E                    BRA     STORE
 211                       *
 212  E54E 3476            APPEND  PSHS    X,Y,A,B,U
 213  E550 8E3E21                  LDX     #$3E21
 214  E553 DE01                    LDU     1
 215  E555 2085                    BRA     STORE
 216                       *
 217  E557 3476            BUILD   PSHS    X,Y,A,B,U
 218  E559 8E4044                  LDX     #$4044
 219  E55C DE01                    LDU     1
 220  E55E 16FF7B                  LBRA    STORE     NOTE! LBRA NEEDED AS OF NOW
 221                       *
 222  E561 3476            OCMD    PSHS    X,Y,A,B,U
 223  E563 8E4105                  LDX     #$4105
 224  E566 DE01                    LDU     1
 225  E568 16FF71                  LBRA    STORE
 226                       *
 227  E56B 3476            SAVE    PSHS    X,Y,A,B,U
 228  E56D 8E4269                  LDX     #$4269
 229  E570 DE01                    LDU     1
 230  E572 16FF67                  LBRA    STORE
 231                       *
 232  E575 3476            RENAME  PSHS    X,Y,A,B,U
 233  E577 8E43F0                  LDX     #$43F0
 234  E57A DE01                    LDU     1
 235  E57C 16FF5D                  LBRA    STORE
 236                       *
 237  E57F 3476            ASMB    PSHS    X,Y,A,B,U
 238  E581 8E4434                  LDX     #$4434
 239  E584 DE01                    LDU     1
 240  E586 16FF53                  LBRA    STORE
 241                       *
 242  E589 3476            XBASIC  PSHS    X,Y,A,B,U
 243  E58B 8E7315                  LDX     #$7315
 244  E58E DE01                    LDU     1
 245  E590 16FF49                  LBRA    STORE
 246                       *
 247  E593 3476            EDIT    PSHS    X,Y,A,B,U
 248  E595 8EBFDA                  LDX     #$BFDA
 249  E598 DE01                    LDU     1
 250  E59A 16FF3F                  LBRA    STORE
 251                       *
 252  E59D 3476            EXEC    PSHS    X,Y,A,B,U
 253  E59F 8EDA78                  LDX     #$DA78
 254  E5A2 DE01                    LDU     1
 255  E5A4 16FF35                  LBRA    STORE
 256                       *
 257  E5A7 3476            CLS     PSHS    X,Y,A,B,U
 258  E5A9 8EDB6C                  LDX     #$DB6C
 259  E5AC DE01                    LDU     1
 260  E5AE 16FF2B                  LBRA    STORE
 261                       *
 262  E5B1 3476            UNDELETE PSHS    X,Y,A,B,U
 263  E5B3 8EDB80                  LDX     #$DB80
 264  E5B6 DE01                    LDU     1
 265  E5B8 16FF21                  LBRA    STORE
 266                       *
 267  E5BB 3476            MAP     PSHS    X,Y,A,B,U
 268  E5BD 8EE196                  LDX     #$E196
 269  E5C0 DE01                    LDU     1
 270  E5C2 16FF17                  LBRA    STORE
 271                       *
 272  E5C5 3476            MEMDUMP PSHS    X,Y,A,B,U
 273  E5C7 8EE26B                  LDX     #$E26B
 274  E5CA DE01                    LDU     1
 275  E5CC 16FF0D                  LBRA    STORE
 276                       *
 277  E5CF 3476            DEBUG   PSHS    X,Y,A,B,U
 278  E5D1 8E0000                  LDX     #$0000
 279  E5D4 DE02                    LDU     2         SECOND EPROM
 280  E5D6 16FF03                  LBRA    STORE
 281                       *
 282                       *
 283  E5D9                 LADDA   EQU     *         LOAD ROUTINE
 284                       *
 285  E5D9 BEE7FA          LOAD1   LDX     PRMSTA    START ADDRESS IN EPROM
 286                       *
 287  E5DC 8D38            LOAD2   BSR     LESPRM    GET 1 BYTE, PUT IN A
 288  E5DE 8102                    CMPA    #2        IS IT 02? I.E. START OF RECORD?
 289  E5E0 2714                    BEQ     LESREC    YES, READ THE RECORD AND DATA
 290  E5E2 8116                    CMPA    #$16      IS IT TRANSFER ADDRESS?
 291  E5E4 26F6                    BNE     LOAD2     SKIP 00 PADDING
 292  E5E6 8D2E                    BSR     LESPRM    GET TRANSFER ADDRESS MSB
 293  E5E8 B7E7FE                  STA     TRNSFR    SAVE MSB
 294  E5EB 8D29                    BSR     LESPRM    GET TRANSFER ADDRESS LSB
 295  E5ED B7E7FF                  STA     TRNSFR+1  SAVE LSB
 296  E5F0 3576                    PULS    X,Y,A,B,U RESTORE REGISTERS
 297  E5F2 6E9FE7FE                JMP     [TRNSFR]  AND JUMP TO START ADDRESS
 298                       *
 299                       * READ FLEX FILE RECORD
 300                       *
 301  E5F6 8D1E            LESREC  BSR     LESPRM    GET RAM ADDRESS MSB
 302  E5F8 1F89                    TFR     A,B       PUT IN B
 303  E5FA 8D1A                    BSR     LESPRM    GET RAM-ADDRESS LSB
 304  E5FC 1E89                    EXG     A,B       SWAP THE TWO BYTES TO GET IT RIGHT
 305  E5FE FDE7FC                  STD     RAMSTO    SAVE IN RAMSTO
 306  E601 8D13                    BSR     LESPRM    GET NUMBER OF BYTES IN RECORD
 307  E603 1F89                    TFR     A,B       PUT IT IN B
 308                       *
 309                       * DONE WITH FLEX FILE RECORD
 310                       * NOW LOAD THE PROGRAM INTO RAM
 311                       *
 312  E605 8D0F            LESRCD2 BSR     LESPRM    GET ONE BYTE
 313  E607 10BEE7FC                LDY     RAMSTO    WHERE IT SHOULD BE STORED
 314  E60B A7A0                    STA     0,Y+      SAVE IT, INCREASE Y
 315  E60D 10BFE7FC                STY     RAMSTO    SAVE NEXT RAM ADDRESS
 316  E611 5A                      DECB              ARE WE AT 0?
 317  E612 26F1                    BNE     LESRCD2   NO, CONTINUE UNTIL WE ARE
 318  E614 20C6                    BRA     LOAD2     YES, LOOK FOR MORE RECORDS
 319                       *
 320                       * SUB ROUTINE THAT READS ONE BYTE FROM THE NEW EPROM
 321                       * CARD 836 AT ADDRESSES $E0B0, $E0C0 OR $E0D0
 322                       * IN: X-REG - ADDRESS IN EPROM TO READ FROM
 323                       *     U-REG - WHAT EPROM TO READ
 324                       *
 325                       * RETURNS: A-REG - ONE BYTE READ FROM EPROM
 326                       *
 327  E616 119302          LESPRM  CMPU    PROMVAL   WHAT EPROM SHOULD WE READ FROM
 328  E619 2504                    BLO     PROM1     LESS THAN 2 = PROM #1
 329  E61B 270A                    BEQ     PROM2     EQUAL WITH 2 = PROM #2
 330  E61D 2E10                    BGT     PROM3     LARGER THAN 2 = PROM #3
 331                       *
 332  E61F BFE0B0          PROM1   STX     EPROM     FIRST EPROM
 333  E622 B6E0B0                  LDA     EPROM     READ DATA
 334  E625 200E                    BRA     LAGRA     PUT IN RAM
 335  E627 BFE0C0          PROM2   STX     EPROM+$10 SECOND EPROM
 336  E62A B6E0C0                  LDA     EPROM+$10 READ DATA
 337  E62D 2006                    BRA     LAGRA     PUT IN RAM
 338  E62F BFE0D0          PROM3   STX     EPROM+$20 THIRD EPROM
 339  E632 B6E0D0                  LDA     EPROM+$20 READ DATA
 340                       *
 341  E635 3001            LAGRA   INX               NEXT POSITIONS
 342  E637 39                      RTS               RETURN
 343                       *
 344                               END

0 error(s), 0 warning(s)
